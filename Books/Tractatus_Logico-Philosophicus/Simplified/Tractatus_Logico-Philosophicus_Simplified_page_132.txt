Truth functions of simple statements come from operations that use these simple statements as their base. (I call these operations truth operations.) The meaning of a truth function of p depends on the meaning of p.

Negation, logical addition, logical multiplication, and so on are operations.

(Negation changes the meaning of the sentence.)

An operation appears in a variable; it shows how to change one type of sentence into another.

It shows the difference between forms.

(What the bases and the result of the operation have in common are the bases themselves.)

An operation doesn’t describe a form, only the difference between forms.

The same operation that changes "p" into "q" also changes "q" into "r," and so on. This means that "p," "q," "r," etc., are variables that express general formal relationships.

The presence of an operation does not explain the meaning of a sentence.

The operation itself doesn’t say anything; only its result does, and that depends on the bases of the operation.

(Operations and functions should not be confused.)

A function can’t be its own argument, but the result of an operation can become its own base.

This is the only way to move from one part to the next in a series of forms (from one type to another in Russell and Whitehead’s hierarchies). (Russell and Whitehead didn’t admit this possibility, but they kept using it.)

When you keep applying an operation to its own result, I call that successive application (“OOOa” means applying “Oξ” three times in a row to “a”).
