3. There is a formal rule that shows how these sentences are made. In this case, the parts inside the brackets are all parts of a series of forms.

5.502 So, instead of writing “(– – – – –W)(ξ,....)”, I write “N(ξ)”.

N(ξ) means the opposite (negation) of all the values of the sentence variable ξ.

5.503 It’s easy to explain how to make sentences using this operation and also how not to make sentences with it. This explanation should be very clear and exact.

5.51 If ξ has only one value, then N(ξ) = ∼p (not p). If it has two values, then N(ξ) = ∼p.∼q (neither p nor q).

5.511 How can the all-encompassing, world-reflecting logic use such special hooks and tricks? Only by linking them all into a super-fine network, like a big mirror.

5.512 “∼p” is true when “p” is false. So in the true sentence “∼p”, “p” is a false sentence. But how does the sign “∼” make this match reality?

What is actually being denied in “∼p” is not the “∼” itself, but what all the signs that deny p have in common.

So the shared rule that creates “∼p”, “∼∼∼p”, “∼p∨∼p”, “∼p.∼p”, and so on forever. This shared part shows the idea of negation.

5.513 You could say: The common part of all symbols that say both p and q are true is the sentence “p . q”. The common part of all symbols that say either p or q is true is the sentence “p∨q”.

And you can say: Two sentences are opposites if they have nothing in common. Every sentence has only one opposite because there is only one sentence completely outside of it.

This also shows in Russell’s notation that “q : p∨∼p” means the same as “q”; and that “p∨∼p” doesn’t say anything at all.

137 LOGICAL-PHILOSOPHICAL TREATISE 5.
